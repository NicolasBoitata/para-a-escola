// Generated by view binder compiler. Do not edit!
package com.test.gravardados.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.test.gravardados.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerViewAuthorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton buttonDelete;

  @NonNull
  public final ImageButton buttonEdit;

  @NonNull
  public final LinearLayout layoutOptions;

  @NonNull
  public final TextView textViewCityVotes;

  @NonNull
  public final TextView textViewName;

  private RecyclerViewAuthorBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton buttonDelete, @NonNull ImageButton buttonEdit,
      @NonNull LinearLayout layoutOptions, @NonNull TextView textViewCityVotes,
      @NonNull TextView textViewName) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.layoutOptions = layoutOptions;
    this.textViewCityVotes = textViewCityVotes;
    this.textViewName = textViewName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerViewAuthorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerViewAuthorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_view_author, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerViewAuthorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_delete;
      ImageButton buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.button_edit;
      ImageButton buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.layout_options;
      LinearLayout layoutOptions = ViewBindings.findChildViewById(rootView, id);
      if (layoutOptions == null) {
        break missingId;
      }

      id = R.id.text_view_city_votes;
      TextView textViewCityVotes = ViewBindings.findChildViewById(rootView, id);
      if (textViewCityVotes == null) {
        break missingId;
      }

      id = R.id.text_view_name;
      TextView textViewName = ViewBindings.findChildViewById(rootView, id);
      if (textViewName == null) {
        break missingId;
      }

      return new RecyclerViewAuthorBinding((LinearLayout) rootView, buttonDelete, buttonEdit,
          layoutOptions, textViewCityVotes, textViewName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
